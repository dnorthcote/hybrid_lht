open_system('parallel_lht');
open_system('gm_parallel_lht');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Hough Kernel Symmetric/Cosine', 'user1');
annotate_port('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Hough Kernel Symmetric/Cosine', 0, 1, 'Potential numerical mismatch');
hilite_system('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Hough Kernel Symmetric/Cosine', 'user1');
annotate_port('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Hough Kernel Symmetric/Cosine', 0, 1, 'Potential numerical mismatch');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/MATLAB Function', 'user1');
annotate_port('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/MATLAB Function', 0, 1, 'Non-zero or unknown initial value');
hilite_system('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/MATLAB Function', 'user1');
annotate_port('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/MATLAB Function', 0, 1, 'Non-zero or unknown initial value');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Constant', 'user1');
annotate_port('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Constant', 0, 1, 'Potential numerical mismatch');
hilite_system('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Constant', 'user1');
annotate_port('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Constant', 0, 1, 'Potential numerical mismatch');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Constant1', 'user1');
annotate_port('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Constant1', 0, 1, 'Potential numerical mismatch');
hilite_system('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Constant1', 'user1');
annotate_port('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Constant1', 0, 1, 'Potential numerical mismatch');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/SineROM', 'user1');
annotate_port('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/SineROM', 0, 1, 'Potential numerical mismatch');
hilite_system('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/SineROM', 'user1');
annotate_port('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/SineROM', 0, 1, 'Potential numerical mismatch');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/row_0', 'user1');
annotate_port('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/row_0', 0, 1, 'Potential numerical mismatch');
hilite_system('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/row_0', 'user1');
annotate_port('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/row_0', 0, 1, 'Potential numerical mismatch');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/theta_index', 'user1');
annotate_port('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/theta_index', 0, 1, 'Potential numerical mismatch');
hilite_system('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/theta_index', 'user1');
annotate_port('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/theta_index', 0, 1, 'Potential numerical mismatch');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Relational Operator', 'user1');
annotate_port('gm_parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Relational Operator', 0, 1, 'Potential numerical mismatch');
hilite_system('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Relational Operator', 'user1');
annotate_port('parallel_lht/Parallel LHT/Parallel LHT Kernel/Hough Kernel/Hough Kernel Symmetric Look Ahead/Look Ahead Hough/Relational Operator', 0, 1, 'Potential numerical mismatch');
