-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj_512_Chen\hdlsrc\parallel_lht\Simple_Dual_Port_RAM.vhd
-- Created: 2020-02-27 22:24:44
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Simple_Dual_Port_RAM
-- Source Path: parallel_lht/Parallel LHT/Parallel LHT Accumulator/Accumulator with Switches/Accumulator/Block RAM/Simple 
-- Dual Port RA
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Simple_Dual_Port_RAM IS
  PORT( clk                               :   IN    std_logic;
        enb                               :   IN    std_logic;
        wr_data                           :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        wr_addr                           :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        wr_en                             :   IN    std_logic;
        rd_addr                           :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        rd_data                           :   OUT   std_logic_vector(9 DOWNTO 0)  -- ufix10
        );
END Simple_Dual_Port_RAM;


ARCHITECTURE rtl OF Simple_Dual_Port_RAM IS

  -- Component Declarations
  COMPONENT SimpleDualPortRAM_generic
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_din                          :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          rd_dout                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SimpleDualPortRAM_generic
    USE ENTITY work.SimpleDualPortRAM_generic(rtl);

  -- Signals
  SIGNAL Simple_Dual_Port_RAM_out1        : std_logic_vector(9 DOWNTO 0);  -- ufix10

BEGIN
  u_Simple_Dual_Port_RAM : SimpleDualPortRAM_generic
    GENERIC MAP( AddrWidth => 10,
                 DataWidth => 10
                 )
    PORT MAP( clk => clk,
              enb => enb,
              wr_din => wr_data,
              wr_addr => wr_addr,
              wr_en => wr_en,
              rd_addr => rd_addr,
              rd_dout => Simple_Dual_Port_RAM_out1
              );

  rd_data <= Simple_Dual_Port_RAM_out1;

END rtl;

