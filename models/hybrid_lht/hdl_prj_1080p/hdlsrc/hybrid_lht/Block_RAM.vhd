-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj_1080p\hdlsrc\hybrid_lht\Block_RAM.vhd
-- Created: 2020-02-29 02:04:05
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Block_RAM
-- Source Path: hybrid_lht/Hybrid LHT/Hybrid LHT Accumulator/Accumulator with Switches/Accumulator/Block RAM
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Block_RAM IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        wr_data                           :   IN    std_logic_vector(35 DOWNTO 0);  -- ufix36
        wr_addr                           :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        wr_en                             :   IN    std_logic;
        rd_addr                           :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        rd_data                           :   OUT   std_logic_vector(35 DOWNTO 0)  -- ufix36
        );
END Block_RAM;


ARCHITECTURE rtl OF Block_RAM IS

  -- Component Declarations
  COMPONENT Simple_Dual_Port_RAM_Generator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_data                         :   IN    std_logic_vector(35 DOWNTO 0);  -- ufix36
          wr_addr                         :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
          rd_data                         :   OUT   std_logic_vector(35 DOWNTO 0)  -- ufix36
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Simple_Dual_Port_RAM_Generator
    USE ENTITY work.Simple_Dual_Port_RAM_Generator(rtl);

  -- Signals
  SIGNAL Simple_Dual_Port_RAM_Generator_out1 : std_logic_vector(35 DOWNTO 0);  -- ufix36

BEGIN
  u_Simple_Dual_Port_RAM_Generator : Simple_Dual_Port_RAM_Generator
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              wr_data => wr_data,  -- ufix36
              wr_addr => wr_addr,  -- ufix12
              wr_en => wr_en,
              rd_addr => rd_addr,  -- ufix12
              rd_data => Simple_Dual_Port_RAM_Generator_out1  -- ufix36
              );

  rd_data <= Simple_Dual_Port_RAM_Generator_out1;

END rtl;

